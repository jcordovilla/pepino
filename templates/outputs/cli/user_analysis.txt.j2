üë§ User Analysis: {{ username }}

Basic Statistics:
‚Ä¢ Total Messages: {{ statistics.total_messages | format_number }}
‚Ä¢ Average Message Length: {{ statistics.avg_message_length | round(1) }} characters
‚Ä¢ Active Days: {{ statistics.active_days | format_number }}
‚Ä¢ First Message: {{ statistics.first_message | format_timestamp }}
‚Ä¢ Last Message: {{ statistics.last_message | format_timestamp }}

{%- if channel_activity %}

üìä Channel Activity:
{%- for activity in channel_activity[:10] %}
‚Ä¢ #{{ activity.channel_name }}: {{ activity.message_count | format_number }} messages ({{ activity.percentage | format_percentage }}%)
{%- endfor %}
{%- endif %}

{%- if time_patterns and time_patterns.hourly_activity %}

‚è∞ Activity Patterns:
Peak Hours:
{%- for hour in time_patterns.hourly_activity[:5] %}
‚Ä¢ {{ hour.hour }}:00 - {{ hour.message_count | format_number }} messages
{%- endfor %}
{%- endif %}

{%- if time_patterns and time_patterns.daily_activity %}

Peak Days:
{%- for day in time_patterns.daily_activity[:7] %}
‚Ä¢ {{ day.day }}: {{ day.message_count | format_number }} messages
{%- endfor %}
{%- endif %}

{%- if summary %}

üìà Summary:
‚Ä¢ Activity Level: {{ summary.activity_level or 'Unknown' }}
‚Ä¢ Engagement Score: {{ summary.engagement_score | round(1) if summary.engagement_score else 'N/A' }}
‚Ä¢ Primary Channels: {{ summary.primary_channels[:3] | join(', ') if summary.primary_channels else 'N/A' }}
{%- endif %}

{%- if messages %}

üß† NLP Analysis of Recent Messages:

{% set user_sentiment = analyze_messages_sentiment(messages[:30]) %}
{%- if user_sentiment %}
Sentiment Profile:
{%- set positive_count = user_sentiment | selectattr('sentiment', 'equalto', 'positive') | list | length %}
{%- set negative_count = user_sentiment | selectattr('sentiment', 'equalto', 'negative') | list | length %}
{%- set neutral_count = user_sentiment | selectattr('sentiment', 'equalto', 'neutral') | list | length %}
‚Ä¢ Positive: {{ positive_count }} messages ({{ (positive_count / user_sentiment | length * 100) | round(1) }}%)
‚Ä¢ Negative: {{ negative_count }} messages ({{ (negative_count / user_sentiment | length * 100) | round(1) }}%)
‚Ä¢ Neutral: {{ neutral_count }} messages ({{ (neutral_count / user_sentiment | length * 100) | round(1) }}%)
{%- endif %}

{% set user_concepts = extract_message_concepts(messages[:50]) %}
{%- if user_concepts %}
Key Topics Discussed:
{%- set concept_counts = {} %}
{%- for item in user_concepts %}
{%- set _ = concept_counts.update({item.concept: concept_counts.get(item.concept, 0) + 1}) %}
{%- endfor %}
{%- set sorted_concepts = concept_counts.items() | sort(attribute=1, reverse=true) %}
{%- for concept, count in sorted_concepts[:8] %}
‚Ä¢ {{ concept }} ({{ count }} times)
{%- endfor %}
{%- endif %}

{%- if all_message_text %}
{% set complexity = analyze_complexity(all_message_text) %}
Communication Style:
‚Ä¢ Text Complexity: {{ complexity.complexity }} ({{ complexity.score | round(2) }}/1.0)
‚Ä¢ Avg Sentence Length: {{ complexity.avg_sentence_length | round(1) }} words
‚Ä¢ Vocabulary Diversity: {{ complexity.lexical_diversity | round(3) }}
{%- endif %}

{%- endif %}

{%- if user_analyzer %}

üîÑ Live Comparison:
{%- set top_users = user_analyzer.get_top_users(limit=10) %}
{%- if top_users %}
{%- for user in top_users %}
{%- if user.username == username %}
‚Ä¢ Rank: #{{ loop.index }} of {{ top_users | length }} active users
{%- endif %}
{%- endfor %}
{%- endif %}
{%- endif %}

{%- if channel_analyzer and channel_activity %}

Cross-Channel Insights:
{%- for activity in channel_activity[:3] %}
{%- set channel_analysis = channel_analyzer.analyze(channel_name=activity.channel_name) %}
{%- if channel_analysis and channel_analysis.statistics %}
‚Ä¢ #{{ activity.channel_name }}: {{ ((activity.message_count / channel_analysis.statistics.total_messages) * 100) | round(1) }}% of channel activity
{%- endif %}
{%- endfor %}
{%- endif %} 